/*
I've changed the phasing relative to the spreadsheet a little. The default state beween
pixels now has P3-OR low, which makes a bit more sense before a row transfer to serial.
*/

defaults {
         P1-IA-1 low P2-IA-1 high P3-IA-1 low
         P1-IA-2 low P2-IA-2 high P3-IA-2 low
         P1-IA-3 low P2-IA-3 high P3-IA-3 low
         P1-IA-4 low P2-IA-4 high P3-IA-4 low
         P1-FS-1 low P2-FS-1 high P3-FS-1 low
         P1-FS-2 low P2-FS-2 high P3-FS-2 low
         P1-FS-3 low P2-FS-3 high P3-FS-3 low
         P1-FS-4 low P2-FS-4 high P3-FS-4 low
         P1-OR low P2-OR high P3-OR low
         RG high ID high
         Int low DeInt low Clamp low CNV low
         }

/*
Another change is that I'm setting RG high as soon as Int goes low. There's no race: the
RG circuit is much slower. We might be able to move RG low earlier for more Int/Deint time.
*/

parameter rows = 2048;
parameter rows_again = 2048;
parameter rows_again_again = rows;

sequence pixcycle {
    step
    P3-OR high step
    CNV high step
    step
    Clamp high step
    P2-OR low RG low step
    step
    step
    DeInt high Clamp low step
    P1-OR high step
    CNV low step
    step
    step
    P3-OR low DeInt low step
    step
    step
    step
    P2-OR high Int high step
    step
    step
    step
    P1-OR low step
    step
    Int low RG high step
} ;

sequence pixcycle2 {
    step
    P3-OR high step
    CNV high step
    pixcycle
    step
    Clamp high step
    P2-OR low RG low step
    step
    step
    DeInt high Clamp low step
    P1-OR high step
    CNV low step
    step
    step
    P3-OR low DeInt low step
    step
    step
    step
    P2-OR high Int high step
    step
    step
    step
    P1-OR low step
    step
    Int low RG high step
    pixcycle
} ;


parameter rows2 = rows + rows;
parameter rows2_again = rows * 2;
parameter rows2_again_again = (2 * rows);
parameter half_rows = (rows / 2);
parameter rows_minus_two = (rows - 2);

hold pixcycle; /* clock serials between frames */
