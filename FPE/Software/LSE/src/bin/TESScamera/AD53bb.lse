# Select bits are PA12 through PA15
PA_DS : 12 4 >field			# put the bits in the right place
\ f PA_DS PA_DS_MASK :constant	# mask for the select bits
17 bit PA_DD  :constant  # DAC data
18 bit PA_DCK :constant  # DAC clock

# Abbreviations

PIOA PIO_SODR PIOA_SODR :constant
PIOA PIO_CODR PIOA_CODR :constant

# Bit banging

DCK_hi : PA_DCK PIOA_SODR !
DCK_lo : PA_DCK PIOA_CODR !
DD_hi : PA_DD PIOA_SODR !
DD_lo : PA_DD PIOA_CODR !
16 bit msb :constant
DD_bit : ifelse DD_lo DD_hi

# dac_idle sets the port bits to the idle state
dac_idle : PA_DS_MASK PIOA_SODR ! DCK_hi
# n dac_select yields nothing
# Assumes we start from idle, clears bits that should be zero.
dac_select : ~ PA_DS PIOA_CODR !

# DAC commands
msb_step : msb & 0= DD_bit DCK_lo DCK_hi
data_step : (<<) dup msb_step
data_bits : 16 data_step iterate DD_lo drop

# val chan dac !dac yields nothing
# Selects dac.
# Puts chan in the channel field, appends val, transmits to AD5328.
# 
!dac : dac_select 12 3 >field | data_bits dac_idle
